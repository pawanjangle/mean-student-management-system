{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add-student/add-student.component.ts","webpack:///src/app/add-student/add-student.component.html","webpack:///src/app/all-students/all-students.component.ts","webpack:///src/app/all-students/all-students.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/app/student.service.ts","webpack:///src/app/update-student/update-student.component.ts","webpack:///src/app/update-student/update-student.component.html","webpack:///src/app/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddStudentComponent","fb","studentService","router","datasaved","studentForm","group","first_name","required","middle_name","last_name","address_line1","address_line2","address_line3","city","district","state","country","pincode","gender","dob","mob","addStudent","value","subscribe","res","navigate","onFormSubmit","selector","templateUrl","styleUrls","AllStudentsComponent","http","students","getAllStudents","getStudents","data","student","deleteStudent","result","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","HeaderComponent","logo","HomeComponent","infra","classroom","library","book","LoginComponent","userService","loginForm","email","password","valid","login","console","log","sessionStorage","setItem","token","reset","err","get","userLogin","NavbarComponent","RegistrationComponent","regForm","minLength","maxLength","user","createUser","StudentService","httpOptions","headers","set","getItem","post","put","providedIn","UpdateStudentComponent","getStudent","snapshot","params","editStudent","warn","UserService","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators} from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { StudentService } from \"../student.service\";\nimport { Student } from \"../student\";\n\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.css']\n})\nexport class AddStudentComponent implements OnInit {\ndatasaved= false;\nstudentForm: FormGroup;\nconstructor( private fb: FormBuilder, private studentService: StudentService, private router: Router){\n}\nngOnInit(){\nthis.studentForm= this.fb.group({\nfirst_name: [\"\", [Validators.required]],\nmiddle_name: [\"\", [Validators.required]],\nlast_name: [\"\", [Validators.required]],\naddress_line1: [\"\", [Validators.required]],\naddress_line2: [\"\", [Validators.required]],\naddress_line3: [\"\", [Validators.required]],\ncity: [\"\", [Validators.required]],\ndistrict: [\"\", [Validators.required]],\nstate: [\"\", [Validators.required]],\ncountry: [\"\", [Validators.required]],\npincode: [\"\", [Validators.required]],\ngender: [\"\", [Validators.required]],\ndob: [\"\", [Validators.required]],\nmob: [\"\", [Validators.required]]\n});\n}\nonFormSubmit(){\nthis.studentService.addStudent(this.studentForm.value).subscribe((res)=> {\nthis.router.navigate([\"/all-students\"]);\nthis.datasaved= true;\n});\n}\n}","<app-navbar></app-navbar>\n<div class=\"container p-3\">\n<h2  class=\"text-center text-success mt-3 text-uppercase font-weight-bold\">Add Student Form</h2>\n<form [formGroup]= \"studentForm\" (ngSubmit)= \"onFormSubmit()\" > <div class=\"form-group\"> <label>First name</label> <input type=\"text\" class=\"form-control\"  placeholder=\"Enter First Name\" formControlName= \"first_name\"> </div> \n<div class=\"form-group\"> <label>Middle Name  </label> <input type=\"text\" class=\"form-control\" formControlName= \"middle_name\" placeholder=\"Enter middle Name\">\n </div>\n<div class=\"form-group\"> <label>Last Name  </label> <input type=\"text\" class=\"form-control\" formControlName= \"last_name\" placeholder=\"Enter Last Name\">\n </div>\n<div class=\"form-group\"> <label>Address Line 1 </label> <input type=\"text\" class=\"form-control\" formControlName= \"address_line1\" placeholder=\"Enter Address Line 1\">\n </div>\n <div class=\"form-group\"> <label>Address Line 2 </label> <input type=\"text\" class=\"form-control\" formControlName= \"address_line2\" placeholder=\"Enter Address Line 2\">\n </div>\n <div class=\"form-group\"> <label>Address Line 3</label> <input type=\"text\" class=\"form-control\" formControlName= \"address_line3\" placeholder=\"Enter Address Line 3\">\n </div>\n<div class=\"form-group\"> <label>City</label> <input type=\"text\" class=\"form-control\" formControlName= \"city\" placeholder=\"Enter city\">\n</div>\n<div class=\"form-group\"> <label>District</label> <input type=\"text\" class=\"form-control\" formControlName= \"district\" placeholder=\"Enter District\">\n</div>\n<div class=\"form-group\"> <label>State</label> <input type=\"text\" class=\"form-control\" formControlName= \"state\" placeholder=\"Enter State\">\n</div>\n<div class=\"form-group\"> <label>Country</label> <input type=\"text\" class=\"form-control\" formControlName= \"country\" placeholder=\"Enter Country\">\n</div>\n<div class=\"form-group\"> <label>Pincode</label> <input type=\"number\" class=\"form-control\" formControlName= \"pincode\" placeholder=\"Enter Pincode\">\n</div>\n<div class=\"form-group\"> <label>Date of Birth</label> <input type=\"date\" class=\"form-control\" formControlName= \"dob\" placeholder=\"Enter DOB\">\n</div>\n<label>Gender</label>\n<div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value=\"Male\" formControlName= \"gender\"checked> <label class=\"form-check-label\" for=\"exampleRadios1\">Male</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" formControlName= \"gender\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"Female\"> <label class=\"form-check-label\" for=\"exampleRadios2\">Female</label> </div>\n<div class=\"form-group\"> <label>Mobile No</label> <input type=\"number\" class=\"form-control\" formControlName= \"mob\" placeholder=\"Enter Mobile No.\">\n</div>\n<div *ngIf= \"datasaved\" class= \"alert alert-success\" role= \"alert\">\nStudent added successfully !\n</div>\n<button type=\"submit\"  class=\"btn btn-success\">Add Student</button>\n</form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StudentService } from \"../student.service\";\nimport { Observable } from \"rxjs\";\nimport {Student } from \"../student\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-all-students',\n  templateUrl: './all-students.component.html',\n  styleUrls: ['./all-students.component.css']\n})\nexport class AllStudentsComponent implements OnInit {\nstudents = [];\ndelete= false;\n  constructor( private studentService: StudentService, private http: HttpClient, private router: Router) { }\n\n  ngOnInit(){\n  this.getAllStudents();\n  \n }\n getAllStudents(){ this.studentService.getStudents().subscribe((data: any[])=>{ \n  this.students= data});\n  }\n\n  \n deleteStud(student){ this.studentService.deleteStudent(student).subscribe((result)=>{\nthis.delete= true;\nthis.getAllStudents();\n });\n\n }\n\n}","<app-navbar></app-navbar>\n<div *ngIf= \"delete\" class=\"alert alert-danger\" role= \"alert\">Student deleted successfully</div>\n<table class=\"table table-responsive-sm  table-bordered text-white table-dark tabled-stripped\">\n<thead>\n<tr>\n<th scope= \"col\">First Name</th>\n<th scope= \"col\">Last Name</th>\n<th scope= \"col\">Address Line 1</th>\n<th scope= \"col\">Address Line 2</th>\n<th scope= \"col\">Address Line 3</th>\n<th scope= \"col\">City</th>\n<th scope= \"col\">District</th>\n<th scope= \"col\">State</th>\n<th scope= \"col\">Country</th>\n<th scope= \"col\">Pincode</th>\n<th scope= \"col\">Gender</th>\n<th scope= \"col\">DOB</th>\n<th scope= \"col\">Mob</th>\n<th scope= \"col\"\n>Update</th>\n<th scope= \"col\">Delete</th>\n</tr>\n</thead>\n<tbody>\n<tr *ngFor= \"let student of students\">\n<td>{{student.first_name}}</td>\n<td>{{student.last_name}}</td>\n<td>{{student.address_line1}}</td>\n<td>{{student.address_line2}}</td>\n<td>{{student.address_line3}}</td>\n<td>{{student.city}}</td>\n<td>{{student.district}}</td>\n<td>{{student.state}}</td>\n<td>{{student.country}}</td>\n<td>{{student.pincode}}</td>\n<td>{{student.gender}}</td>\n<td>{{student.dob}}</td>\n<td>{{student.mob}}</td>\n<td><a routerLink= \"/update/{{student._id}}\">\n<button class= \"btn btn-warning\">Update</button></a></td>\n<td><button class= \"btn btn-danger\" (click)= \"deleteStud(student._id)\">Delete</button></td>\n</tr>\n</tbody>\n</table>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { AllStudentsComponent } from './all-students/all-students.component';\nimport { AddStudentComponent } from './add-student/add-student.component';\nimport { UpdateStudentComponent } from './update-student/update-student.component';\nimport { RegistrationComponent } from \"./registration/registration.component\";\nconst routes: Routes = [ \n{\npath: \"\",\ncomponent: HomeComponent,\n},\n{\npath: \"login\",\ncomponent: LoginComponent\n},\n{\npath: \"add-student\",\ncomponent: AddStudentComponent\n},\n{\npath: \"update/:id\",\ncomponent: UpdateStudentComponent\n},\n{\npath: \"all-students\",\ncomponent: AllStudentsComponent\n},\n{\npath: \"registration\",\ncomponent: RegistrationComponent\n},\n{\npath: \"**\",\ncomponent: HomeComponent\n}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddStudentComponent } from './add-student/add-student.component';\nimport { AllStudentsComponent } from './all-students/all-students.component';\nimport { UpdateStudentComponent } from './update-student/update-student.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddStudentComponent,\n    AllStudentsComponent,   \n    UpdateStudentComponent,\n    NavbarComponent,\n    HomeComponent,\n    LoginComponent,\n    RegistrationComponent,\n    HeaderComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\nlogo: string= \"assets/logo.jpg\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}","<nav class=\"navbar navbar-expand-sm navbar-dark bg-dark text-white sticky-top\">\n<img  class=\"navbar-brand logo img-responsive\" src={{logo}}> <a class=\"navbar-brand mr-5\" routerLink= \"/home\">SMS</a><button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"> <span class=\"navbar-toggler-icon\"></span> </button> <div class=\"collapse navbar-collapse text-center\" id=\"navbarNav\"> <ul class=\"navbar-nav ml-auto \"> <li class=\"nav-item active\"> <a routerLink= \"/\" class=\"nav-link mx-5\">Home <span class=\"sr-only\">(current)</span></a> </li> \n <li class=\"nav-item\"> <a routerLink= \"/login\"class=\"nav-link mx-5 text-white\">Login</a> </li>\n <li class=\"nav-item\"> <a routerLink= \"/registration\" class=\"nav-link mx-5 text-white\">Register</a></li>\n </ul> </div> </nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\ninfra: string= \"assets/infra.jpg\";\nclassroom: string= \"assets/classroom.jpg\";\nlibrary: string= \"assets/library.jpg\";\nbook: string= \"assets/book.jpg\";\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}","<app-header></app-header>\n<div class=\"bg-light\">\n<div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-ride=\"carousel\"> <ol class=\"carousel-indicators\"> <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" class=\"active\"></li> <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li> <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li> </ol> <div class=\"carousel-inner\"> <div class=\"carousel-item active\"> <img class=\"d-block w-100\" src={{infra}} alt=\"First slide\"> </div> <div class=\"carousel-item\"> <img class=\"d-block w-100\" src={{classroom}} alt=\"Second slide\"> </div> <div class=\"carousel-item\"> <img class=\"d-block w-100\" src={{library}} alt=\"Third slide\"> </div> </div> <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\"> <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span> <span class=\"sr-only\">Previous</span> </a> <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\"> <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span> <span class=\"sr-only\">Next</span> </a> </div>\n<h2 class=\"text-center text-danger px-5 pt-5\">Welcome to </h2><h3  class=\"text-center text-success\"> Student Management System</h3>\n<p class= \"text-center p-5\"><a class= \"text-center\"routerLink= \"/login\">click here</a> for Login</p>\n<img src= {{book}} class= \"img-fluid\">\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { UserService } from \"../user.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  datasaved= false;\nmessage: string;\nget email(){\nreturn this.loginForm.get(\"email\")\n}\nget password(){\nreturn this.loginForm.get(\"password\")\n}\nloginForm= new FormGroup({\nemail: new FormControl(\"\", [Validators.required]),\npassword: new FormControl(\"\", [Validators.required])\n});\nconstructor( private userService: UserService, private router: Router){}\nngOnInit(){}\nuserLogin(){\nif(this.loginForm.valid){\nthis.userService.login(this.loginForm.value).subscribe(res=>{console.log(res);\nsessionStorage.setItem(\"token\", res.token);\nthis.loginForm.reset();\nthis.router.navigate([\"/all-students\"]);\n},\nerr =>{\nthis.datasaved= true;\n}\n);\n}}\n}","<app-header></app-header>\n<div class=\"container fluid py-3\">\n<div class=\"jumbotron\"><h4 class=\"text-primary\">Hello Pawan<br></h4>\n<h5 class=\"text-danger\">Welcome to Student Management System</h5></div>\n<h4 class= \"text-center text-success font-weight-bold text-uppercase\">Login Form</h4>\n<p *ngIf= \"datasaved\" ngClass= \"success\" class= \"text-danger\">\n* Invalid login credentials !!!\n<p>\n<form [formGroup]= \"loginForm\" (ngSubmit)= \"userLogin()\">\n<div class=\"form-group\"> <label>Email </label> <input type=\"email\" class=\"form-control\"  placeholder=\"Enter email\" formControlName= \"email\">\n </div>\n <div class= \"alert alert-danger \" *ngIf= \"email.invalid && (email.touched || email.dirty)\">\n<div *ngIf= \"email.errors.required\"> Email field is required !!!\n</div>\n</div>\n<div class=\"form-group\"> <label>Password </label> <input type=\"password\" class=\"form-control\" placeholder=\"Enter password\" formControlName= \"password\">\n</div>\n<div class= \"alert alert-danger \" *ngIf= \"password.invalid && (password.touched || password.dirty)\">\n<div *ngIf= \"password.errors.required\"> Password field is required !!!\n</div>\n</div>\n<button type=\"submit\" [disabled]= \"loginForm.invalid\"class=\"btn btn-primary\">Login</button>\n</form>\n<p class=\"pt-3\">Not registered yet ? <a routerLink=\"/registration\">click here</a> to Register</p>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\nlog: string= \"assets/logo.jpg\";\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}","<nav class=\"navbar navbar-expand-sm navbar-dark bg-dark text-white mb-5 sticky-top\">\n<img  class=\"navbar-brand log\" src={{log}}> <a class=\"navbar-brand text-center text-success\" routerLink=\"/all-students\">Student Portal</a><button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"> <span class=\"navbar-toggler-icon\"></span> </button> <div class=\"collapse navbar-collapse text-center\" id=\"navbarNav\"> <ul class=\"navbar-nav ml-auto\"> <li class=\"nav-item active\"> <a routerLink= \"/add-student\" class=\"nav-link mx-2\">Add-student</a> </li> \n <li class=\"nav-item\"> <a routerLink= \"/all-students\" class=\"nav-link mx-2 text-white\">All-Students</a> </li> \n  </ul> </div> </nav>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators} from \"@angular/forms\";\nimport { UserService } from \"../user.service\";\nimport { User } from \"../user\";\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\ndatasaved= false;\nregForm: FormGroup;\nconstructor( private fb: FormBuilder, private userService: UserService){\n}\n\nngOnInit(){\nthis.datasaved= false;\nthis.regForm= this.fb.group({\nfirst_name: [\"\", [Validators.required]],\nlast_name: [\"\", [Validators.required]],\nemail: [\"\", [Validators.required, Validators.email]],\npassword: [\"\", [Validators.required, Validators.minLength(6), Validators.maxLength(10)]]\n});\n}\nget first_name(){\nreturn this.regForm.get(\"first_name\")\n}\nget last_name(){\nreturn this.regForm.get(\"last_name\")\n}\nget email(){\nreturn this.regForm.get(\"email\")\n}\nget password(){\nreturn this.regForm.get(\"password\")\n}\nonFormSubmit(){\nthis.datasaved= false;\nlet user= this.regForm.value;\nthis.createUser(user);\nthis.regForm.reset();\n}\ncreateUser(user: User){\nthis.userService.createUser(user).subscribe(\nuser=> {\nthis.datasaved= true;\n}\n\n)\n}\n}","<app-header></app-header>\n<div class=\"container p-3\">\n<h2  class=\"text-center text-success mt-3 text-uppercase font-weight-bold\">Registration Form</h2>\n<p *ngIf= \"datasaved\" ngClass= \"success\" class=\"text-success\">\nUser added successfully !\n</p>\n<form [formGroup]= \"regForm\" (ngSubmit)= \"onFormSubmit()\" > <div class=\"form-group\"> <label>First name</label> <input type=\"text\" class=\"form-control\"  placeholder=\"Enter First Name\" formControlName= \"first_name\">\n </div> \n<div class= \"alert alert-danger \" *ngIf= \"first_name.invalid && (first_name.touched || first_name.dirty)\">\n<div *ngIf= \"first_name.errors.required\">First name field is required !!!\n</div>\n</div>\n<div class=\"form-group\"> <label>Last Name  </label> <input type=\"text\" class=\"form-control\" formControlName= \"last_name\" placeholder=\"Enter Last Name\">\n </div>\n <div class= \"alert alert-danger \" *ngIf= \"last_name.invalid && (last_name.touched || last_name.dirty)\">\n<div *ngIf= \"last_name.errors.required\"> Last Name field is required !!!\n</div>\n</div>\n<p class= \"text-danger\">(Please, enter any fake email id for testing purpose)</p>\n<div class=\"form-group\"> <label>Email </label> <input type=\"email\" class=\"form-control\" formControlName= \"email\" placeholder=\"Enter email\">\n</div>\n<div class= \"alert alert-danger \" *ngIf= \"email.invalid && (email.touched || email.dirty)\">\n<div *ngIf= \"email.errors.required\"> Email field is required !!!\n</div>\n<div *ngIf= \"email.errors.email\">\nEmail is invalid !!!\n</div>\n </div>\n<div class=\"form-group\"> <label>Password </label> <input type=\"password\" class=\"form-control\" formControlName= \"password\" placeholder=\"Enter password\">\n</div>\n<div class= \"alert alert-danger \" *ngIf= \"password.invalid && (password.touched || password.dirty)\">\n<div *ngIf= \"password.errors.required\"> Password field is required !!!\n</div>\n<div *ngIf= \"password.errors.minlength\">\nPassword length should be minimum 6 charactors !!!</div>\n<div *ngIf= \"password.errors.maxlength\">\nPassword length should be maximum 10 charactors !!!\n</div>\n</div>\n<button type=\"submit\" [disabled]= \"regForm.invalid\"class=\"btn btn-primary\">Register</button>\n</form>\n<p class=\"pt-3\">already registered ? <a routerLink= \"/login\">click here</a> to Login</p>\n \n</div>","import { Injectable } from '@angular/core';\nimport { Observable } from \"rxjs\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Student } from \"./student\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\nprivate httpOptions= \n  {\n  headers: new HttpHeaders()\n  .set(\"Content-Type\", \"application/json\")\n  .set(\"auth-token\", sessionStorage.getItem(\"token\"))\n  }\n  constructor( public http: HttpClient ) { }\n    getStudents(){\n  return this.http.get(\"/api/student/all-students\", this.httpOptions);\n  }\n  addStudent( student ){\nreturn this.http.post(\"/api/student/add-student\", student, this.httpOptions);\n}\ngetStudent(id){\n  return this.http.get(\"/api/student/\"+id );\n  }\n\ndeleteStudent(id){\nreturn this.http.delete( \"/api/student/\"+id);\n}\neditStudent(id, data){\nreturn this.http.put(\"/api/student/\" +id, data)\n}\n\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from \"@angular/forms\";\nimport { StudentService } from \"../student.service\";\nimport { ActivatedRoute } from \"@angular/router\";\n@Component({\n  selector: 'app-update-student',\n  templateUrl: './update-student.component.html',\n  styleUrls: ['./update-student.component.css']\n})\nexport class UpdateStudentComponent implements OnInit {\ndatasaved= false;\nstudentForm= new FormGroup({\nfirst_name: new FormControl(\"\"),\nmiddle_name: new FormControl(\"\"),\nlast_name: new FormControl(\"\"),\naddress_line1: new FormControl(\"\"),\naddress_line2: new FormControl( \"\"),\naddress_line3: new FormControl(\"\"),\ncity: new FormControl( \"\"),\ndistrict: new FormControl( \"\"),\nstate: new FormControl( \"\" ),\ncountry: new FormControl( \"\"),\npincode: new FormControl( \"\"),\ngender: new FormControl(\"\"),\ndob: new FormControl(\"\"),\nmob: new FormControl(\"\")\n});\n  \nconstructor( private studentService: StudentService, private router: ActivatedRoute) { }\n  ngOnInit(): void { this.studentService.getStudent(this.router.snapshot.params.id).subscribe((result)=>{\n this.studentForm= new FormGroup({\nfirst_name: new FormControl( result[\"first_name\"]),\nmiddle_name: new FormControl( result[\"middle_name\"]),\nlast_name: new FormControl( result[\"last_name\"]),\naddress_line1: new FormControl( result[\"address_line1\"]),\naddress_line2: new FormControl( result[\"address_line2\"]),\naddress_line3: new FormControl( result[\"address_line3\"]),\ncity: new FormControl( result[\"city\"]),\ndistrict: new FormControl( result[\"district\"]),\nstate: new FormControl( result[\"state\"]),\ncountry: new FormControl( result[\"country\"]),\npincode: new FormControl( result[\"pincode\"]),\ngender: new FormControl( result[\"gender\"]),\ndob: new FormControl( result[\"dob\"]),\nmob: new FormControl( result[\"mob\"])\n});\n  });\n  }\nonFormSubmit(){\nconsole.log(this.studentForm.value);\nthis.studentService.editStudent(this.router.snapshot.params.id, this.studentForm.value).subscribe((result)=>{console.warn(result);\nthis.datasaved= true;\n});\n\n}\n}","<app-navbar></app-navbar>\n<div class=\"container p-3\">\n<h2  class=\"text-center text-success mt-3 text-uppercase font-weight-bold\">Update Student Form</h2>\n<form [formGroup]= \"studentForm\" (ngSubmit)= \"onFormSubmit()\" > <div class=\"form-group\"> <label>First name</label> <input type=\"text\" class=\"form-control\"  placeholder=\"Enter First Name\" formControlName= \"first_name\"> </div> \n<div class=\"form-group\"> <label>Middle Name  </label> <input type=\"text\" class=\"form-control\" formControlName= \"middle_name\" placeholder=\"Enter middle Name\">\n </div>\n<div class=\"form-group\"> <label>Last Name  </label> <input type=\"text\" class=\"form-control\" formControlName= \"last_name\" placeholder=\"Enter Last Name\">\n </div>\n<div class=\"form-group\"> <label>Address Line 1 </label> <input type=\"text\" class=\"form-control\" formControlName= \"address_line1\" placeholder=\"Enter Address Line 1\">\n </div>\n <div class=\"form-group\"> <label>Address Line 2 </label> <input type=\"text\" class=\"form-control\" formControlName= \"address_line2\" placeholder=\"Enter Address Line 2\">\n </div>\n <div class=\"form-group\"> <label>Address Line 3</label> <input type=\"text\" class=\"form-control\" formControlName= \"address_line3\" placeholder=\"Enter Address Line 3\">\n </div>\n<div class=\"form-group\"> <label>City</label> <input type=\"text\" class=\"form-control\" formControlName= \"city\" placeholder=\"Enter city\">\n</div>\n<div class=\"form-group\"> <label>District</label> <input type=\"text\" class=\"form-control\" formControlName= \"district\" placeholder=\"Enter District\">\n</div>\n<div class=\"form-group\"> <label>State</label> <input type=\"text\" class=\"form-control\" formControlName= \"state\" placeholder=\"Enter State\">\n</div>\n<div class=\"form-group\"> <label>Country</label> <input type=\"text\" class=\"form-control\" formControlName= \"country\" placeholder=\"Enter Country\">\n</div>\n<div class=\"form-group\"> <label>Pincode</label> <input type=\"number\" class=\"form-control\" formControlName= \"pincode\" placeholder=\"Enter Pincode\">\n</div>\n<label>Gender</label>\n<div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value=\"Male\" formControlName= \"male\"checked> <label class=\"form-check-label\" for=\"exampleRadios1\">Male</label> </div> <div class=\"form-check\"> <input class=\"form-check-input\" type=\"radio\" formControlName= \"female\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"Female\"> <label class=\"form-check-label\" for=\"exampleRadios2\">Female</label> </div>\n<div class=\"form-group\"> <label>Date of Birth</label> <input type=\"date\" class=\"form-control\" formControlName= \"dob\" placeholder=\"Enter DOB\">\n</div>\n<div class=\"form-group\"> <label>Mobile No</label> <input type=\"number\" class=\"form-control\" formControlName= \"mob\" placeholder=\"Enter Mobile No.\">\n</div>\n<p *ngIf= \"datasaved\" ngClass= \"success\" class=\"text-success\">\nStudent updated successfully !\n</p>\n<button type=\"submit\" [disabled]= \"studentForm.invalid\" class=\"btn btn-warning taxt-danger\">Update Student</button>\n<button class=\"btn btn-secondary text-white ml-5\" routerLink= \"/all-students\">All Students</button>\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { User } from \"./user\";\nimport { Loguser } from \"./loguser\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor( public http: HttpClient ) { }\n  createUser(user: User):Observable<User>{\nreturn this.http.post<User>(\"/api/user/user\", user);\n}\nlogin(user){\nreturn this.http.post<any>(\"/api/user/login\", user)\n}\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\nproduction: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}